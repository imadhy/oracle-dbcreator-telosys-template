#parse("./include/data-types-oracle.vm")
#set ($QUOTES = '"')
-- File generated by $generator.name ( version $generator.version ) - Date $today.date("yyyy-MM-dd") ( Time $today.time ) --

--
-- Oracle database
--

#foreach ( $entity in $selectedEntities )
#set ( $capitalizedEntityName = ${fn.toUpperCase($entity.name)})
#set ( $uncapitalizedEntityName = ${fn.uncapitalize($entity.name)})
## Table attributes on creation
#set ( $tableColumns = "" )
#foreach ( $attrib in $entity.attributes )
#set ($attribType = "${DOLLAR}dataTypes.${attrib.neutralType}")
#set ( $capitalizedAttribName = ${fn.toUpperCase($attrib.name)})
#set ( $tableColumns = $tableColumns + "${QUOTES}${capitalizedAttribName}${QUOTES} #evaluate($attribType)" )
#if ( $foreach.count < $entity.attributes.size() )
#if ( !$attrib.isAutoIncremented() && $attrib.isNotNull() )
#set ( $tableColumns = $tableColumns + " NOT NULL,
    " )
#else
#set ( $tableColumns = $tableColumns + ",
    " )
#end
#else
#if ( $attrib.isNotNull() )
#set ( $tableColumns = $tableColumns + " NOT NULL" )
#end
#end
#end
##
--
-- Name: $capitalizedEntityName;
-- Type: TABLE;
--

CREATE TABLE $capitalizedEntityName (
    $tableColumns
);

--
-- Name: $entity.name ${capitalizedEntityName}_PK;
-- Type: CONSTRAINT;
--

ALTER TABLE $capitalizedEntityName
    ADD CONSTRAINT ${capitalizedEntityName}_PK PRIMARY KEY (${fn.toUpperCase($entity.keyAttributesNamesAsString(', '))}) ENABLE;

#foreach ( $attrib in $entity.keyAttributes )
#if ( $attrib.isAutoIncremented() )
#set ( $capitalizedAttribName = ${fn.toUpperCase($attrib.name)})
--
-- Name: $attrib.name ${capitalizedAttribName}_sequence;
-- Type: SEQUENCE;
--

CREATE SEQUENCE ${capitalizedAttribName}_SEQUENCE
    START WITH 1 INCREMENT BY 1;
#end
#end

--------------------------------------------------------------------
#end
#foreach ( $entity in $selectedEntities )
#set ( $capitalizedEntityName = ${fn.toUpperCase($entity.name)})
#foreach( $link in $entity.selectedLinks )
#foreach( $linkAttribute in $link.attributes )
#if ($foreach.count == 1)

--
-- Name: ${capitalizedEntityName} ${capitalizedEntityName}_${fn.toUpperCase($linkAttribute.originAttribute.name)}_FK
-- Type: FK CONSTRAINT;
--
#end
## Foreign Keys
## Foreign key behaviour on delete can be modified depend on the needs :
## ON DELETE RESTRICT, ON DELETE NO ACTION, ON DELETE CASCADE, ON DELETE SET NULL (default)
ALTER TABLE $capitalizedEntityName
    ADD CONSTRAINT ${capitalizedEntityName}_${fn.toUpperCase($linkAttribute.originAttribute.name)}_FK FOREIGN KEY (${fn.toUpperCase($linkAttribute.originAttribute.name)}) REFERENCES ${fn.toUpperCase($link.fieldName)}(${fn.toUpperCase($linkAttribute.targetAttribute.name)}) ON DELETE SET NULL;
#end
#end
#end